{"ast":null,"code":"var _jsxFileName = \"/home/levantsi/FullstackOpen/fullstack-open-2020Simo/part2/phrases/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  });\n  console.log('render', notes.length, 'notes');\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"show \", showAll ? 'important' : 'all')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \" save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/levantsi/FullstackOpen/fullstack-open-2020Simo/part2/phrases/src/App.js"],"names":["React","useState","useEffect","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","get","then","response","data","length","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","concat","notesToShow","filter","note","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = () => {\nconst [notes, setNotes] = useState([])\nconst [newNote, setNewNote] = useState('')\nconst [showAll, setShowAll] = useState(true)\n\nuseEffect(() => {\n  console.log('effect')\n  axios\n  .get('http://localhost:3001/notes')\n  .then(response => {\n    console.log('promise fulfilled')\n    setNotes(response.data)\n    \n  })\n})\nconsole.log('render', notes.length, 'notes');\n\n\nconst handleNoteChange = (event) => {\n  console.log(event.target.value)\n  setNewNote(event.target.value)\n}\n\nconst addNote = (event) => {\n  event.preventDefault()\n  const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() > 0.5,\n    id: notes.length + 1\n  }\n  setNotes(notes.concat(noteObject))\n  setNewNote('')\n}\n\nconst notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n    return (\n      <div>\n        <h1>Notes</h1>\n        <div>\n          <button onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important': 'all'}\n          </button>\n        </div>\n        \n        <ul>\n          {notesToShow.map(note => \n            <Note key={note.id} note = {note} />\n          )}\n        </ul>\n        <form onSubmit = {addNote}>\n          <input \n            value = {newNote}\n            onChange={handleNoteChange}\n            />\n          <button type = \"submit\"> save</button>\n        </form>\n      </div>\n    )\n  }\n\n  export default App\n  "]},"metadata":{},"sourceType":"module"}