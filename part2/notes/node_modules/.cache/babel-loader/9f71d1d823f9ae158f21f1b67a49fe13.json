{"ast":null,"code":"var _jsxFileName = \"/home/levantsi/FullstackOpen/fullstack-open-2020Simo/part2/phrases/src/App.js\";\nimport React, { useState } from 'react';\nimport Note from './components/Note';\n\nconst App = props => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \" save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/levantsi/FullstackOpen/fullstack-open-2020Simo/part2/phrases/src/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","newNote","setNewNote","handleNoteChange","event","console","log","target","value","addNote","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","concat","map","note"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CACpC,eADoC,CAAtC;;AAIA,QAAMQ,gBAAgB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,UAAU,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIL,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEX,OADQ;AAEjBY,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBC,MAAAA,EAAE,EAAEpB,KAAK,CAACqB,MAAN,GAAe;AAJF,KAAnB;AAMApB,IAAAA,QAAQ,CAACD,KAAK,CAACsB,MAAN,CAAaV,UAAb,CAAD,CAAR;AACAT,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAWI,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACuB,GAAN,CAAUC,IAAI,iBACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAhB;AAAoB,IAAA,IAAI,EAAII,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,eAOE;AAAM,IAAA,QAAQ,EAAId,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAIR,OADX;AAEE,IAAA,QAAQ,EAAEE,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAQ,IAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CAPF,CADF;AAiBD,CAvCH;;AAyCE,eAAeN,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\nconst [notes, setNotes] = useState(props.notes)\nconst [newNote, setNewNote] = useState(\n  'a new note...'\n)\n\nconst handleNoteChange = (event) => {\n  console.log(event.target.value)\n  setNewNote(event.target.value)\n}\n\nconst addNote = (event) => {\n  event.preventDefault()\n  const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() > 0.5,\n    id: notes.length + 1\n  }\n  setNotes(notes.concat(noteObject))\n  setNewNote('')\n}\n    return (\n      <div>\n        <h1>Notes</h1>\n        <ul>\n          {notes.map(note => \n            <Note key={note.id} note = {note} />\n          )}\n        </ul>\n        <form onSubmit = {addNote}>\n          <input \n            value = {newNote}\n            onChange={handleNoteChange}\n            />\n          <button type = \"submit\"> save</button>\n        </form>\n      </div>\n    )\n  }\n\n  export default App\n  "]},"metadata":{},"sourceType":"module"}